print("Hello World!")
a
a<- available.packages()
View(a)
View(a)
find.package("devtools")
install.packages("devtools")
find_rtools()
library (devtools)
find_rtools()
install(KernSmooth)
install(Kernsmooth)
install.packages(KenrSmooth)
install.packages(KernSmooth)
install.packages("KernSmooth")
library(KernSmooth)
get wd
getwd()
dir()
getwd()
?mtcars
head(mtcars, 4)
source('~/.active-rstudio-document', echo=TRUE)
search()
install.packages(ggplot2)
install.packages('ggplot2)
''''''''''''''''/]
;
;';'
install.packages('ggplot2')
search()
library(ggplot2)
library('ggplot2')
search()
source('~/.active-rstudio-document', echo=TRUE)
d1 = as.Date("1998-09-29")
d1
unclass(d1)
d2 = as.Date("1908-09-29")
d2
unclass(d2)
library(swirl)
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list<-lapply(flag, class)
cls_list<-lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
class(flag_colors)
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <-  sapply (flag_shapes, range)
shape_mat
class(flag_shapes)
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply)(flags, unique
sapply)(flags, unique)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
library(swirl)
swirl)
swirl()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok ()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
class(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
numeric()
ds <-  numeric ()
ds
class(ds)
mean <- 85
mean
class( mean)
myFun<- mean ()
myFun<- function (Fun) {mean()}
myFun (c(65,564,65))
library(datasets)
data(iris)
?iris
data(iris)
View (iris)
colnames(iris)
mean (iris$Sepal.Length)
apply(iris[, 1:4], 2, mean)
apply(iris, 1, mean)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 1, mean)
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
sapply(split(mtcars$mpg, mtcars$cyl), mean)
apply(mtcars, 2, mean)
lapply(mtcars, mean)
sapply(mtcars, cyl, mean)
4cyl <- mtcars[mtcars$cyl == 4]
head(mtcars)
mtcars[1,5]
mtcars[1,4]
4cyl <- mtcars[mtcars$cyl == 4, 4]
4cyls <- mtcars [mtcars$cyl == 4, 4]
traceback
4cyls <- mtcars [mtcars$cyl == 4, 4]
traceback()
mtcars$cyl == 4
mtcars [mtcars$cyl == 4, 4]
mtcars [mtcars$cyl == 4]
mtcars [mtcars$cyl == 4,]
4seleros <- 5
cyls4 <- mtcars [mtcars$cyl == 4, 4]
cyls8 <- mtcars [mtcars$cyl == 8, 4]
cyls8
cyls4_m <- mean (cyls4)
cyls8_m <- mean (cyls8)
abs(cyls4_m - cyls8_m)
debug(ls)
ls(45)
3e2rfdwe
2
2
nnn
q
q
qq
q
q
q
qc
q
q
f q
q
q
quit()
exit()
Q
Q
x <-5
mean (iris$Sepal.Length)
Q
Q
rmarkdown::run
rmarkdown::run()
knitr::opts_chunk$set(echo = TRUE)
clear
clear ()
set.seed(1)
rpois(5, 2)
?qpois
library (swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips (c(0,1), 100, prob = c(0.3, 0.7))
flips <- (c(0,1), 100, prob = c(0.3, 0.7))
flips <- sample (c(0,1), 100, prob = c(0.3, 0.7))
flips <- sample (c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?binom
?rbinom
rbinom(1, size = 100, prob = 0.7)
rbinom(2, size = 100, prob = 0.7)
rbinom(6, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, 100, 25)
?rpois()
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
dim(my_pois)
cm <- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
dim(cars)
plot(cars)
?plot
plot(cars$speed, cars$dist)
plot(y = cars$speed, x = cars$dist)
plot(x = cars$speed, y = cars$dist, xlab = 'Speed')
plot(x = cars$speed, y = cars$dist, xlab = 'Speed', ylab = 'Stopping Distance')
plot(x = cars$speed, y = cars$dist, ylab = 'Stopping Distance')
plot(x = cars$speed, y = cars$dist, xlab = 'Speed', ylab = 'Stopping Distance')
plot(x = cars$speed, y = cars$dist, xlab = 'Speed', ylab = 'Stopping Distance', main = "My Plot")
plot(x = cars$speed, y = cars$dist, main = "My Plot")
plot(cars, main = "My Plot")
plot(cars, main = "My Plot", sub = 'My Plot Subtitle')
Type plot(cars, sub = "My Plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
?par
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
data(mtcars)
play()
?data
dim (mtcars)
str(cars)
str(mtcars)
next()
nxt()
?boxplot
boxplot(formula = mpg ~ cyl , data = mtcars)
hist(mtcars$mpg)
setwd("~/Coursera/Johns Hopkins Data Science Specializition/R Programming/Assignments/Week 4")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head (outcome)
str(outcome)
summary(outcome)
colnames(outcome)
head(outcome$Comparison.to.U.S..Rate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
str(outcome$Comparison.to.U.S..Rate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
summary (outcome$Comparison.to.U.S..Rate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
?gl
?levels
llevels (outcome$Comparison.to.U.S..Rate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
levels (outcome$Comparison.to.U.S..Rate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
head(outcome$State)
str(outcome$State)
summary(outcome$State)
unique(outcome$State)
outcome$State = 'SD'
unique(outcome$State)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
unique(outcome$State)
outcome$State == 'SD'
sum (outcome$State == 'SD')
?is.in
sum (outcome$State == 'XY')
?any
any (outcome$State == 'XY')
any (outcome$State == 'AL')
source ('best.r')
best('AL', 'heart attack')
best('AL', 'heart attac')
best('A', 'heart attack')
?subset
subset (outcome, outcome[,state] == 'AL')
subset (outcome, outcome[,State] == 'AL')
outcome[State]
outcome['State']
subset (outcome, outcome['State'] == 'AL')
subset (outcome, outcome['State'] == 'AL', c(2, 4))
colnames(outcome)
subset (outcome, outcome['State'] == 'AL', c('City', 'State'))
head(outcome$"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack")
c(1,2,3) & c(F, F , T)
c(1,2,3) $& c(F, F , T)
c(1,2,3) * c(F, F , T)
c(1,2,3) * c(T, F , T)
colnames(outcome)
source (best.r)
source ('best.r'')
source ('best.r')
source ('best.r')
best('Al', 'heart attack')
best('AL', 'heart attack')
source ('best.r')
best('AL', 'heart attack')
x <- best('AL', 'heart attack')
dim (x)
x(98,2 )
x[98,2]
class(x[98,2])
?numeric
source ('best.r')
x <- best('AL', 'heart attack')
class(x[98,2])
str(x)
y<- numeric (x[,2])
y<- as.numeric (x[,2])
y
x[,2]
y<- as.double (x[,2])
y
y <- transform(x, char = as.numeric(char))
?transform
y <- sapply (x, as.numeric)
y
y <- sapply (x[,2], as.numeric)
y
y <- as.character(x[,2])
y <- as.numeric(x[,2])
y
y <- levels (x[,2])
y
x <- best('AL', 'heart attack')
y <- levels (x[,2])
y
as.numeric(y)
?levels
y <- factor (x[,2])
as.numeric(y)
x[,2] *1.0
as.numeric(x[,2]) * 1.0
x[,2]
as.numeric('14.3')
class(x[,2])
as.character(x[,2])
as.numeric(as.character(x[,2]))
source('best.r')
x <- best('AL', 'heart attack')
x
?max
which.max (x[],2])
which.max (x[,2])
source('best.r')
x <- best('AL', 'heart attack')
which.max (x[,2])
x[,2]
which.min (x[,2])
y<-x[,2]
y [1] <- 100
max(y)
max(y, na.rm = TRUE)
which.max(y)
y [2] <- 100
which.max(y)
max (c('b', 'a'))
max (c('a', 'b'))
sort (c('b', 'a'))
sort (c('b'))
?min
source('best.r')
x <- best('AL', 'heart attack')
x
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
source('best.r')
best("MD", "pneumonia")
